{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sulejman\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId].js\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\"; // our-domain.com/detail-meetup\n\nfunction MeetupDetailing(props) {\n  const router = useRouter();\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MeetupDetailing;\nexport async function getStaticPaths() {\n  const mongoClient = await MongoClient.connect(\"mongodb+srv://somePassword:somePassword@cluster0.nhwnb.mongodb.net/meetups?retryReads=true&w=majority\");\n  const db = mongoClient.db();\n  const collections = db.collection(\"meetups\"); // const allPaths = await collections.find().toArray();\n\n  const meetups = await collections.find({}, {\n    _id: 1\n  }).toArray();\n  mongoClient.close();\n  return {\n    fallback: false,\n    paths: meetups.map(value => ({\n      params: {\n        meetupId: value._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const pageId = context.params.meetupId;\n  const mongoClient = await MongoClient.connect(\"mongodb+srv://somePassword:somePassword@cluster0.nhwnb.mongodb.net/meetups?retryReads=true&w=majority\");\n  const db = mongoClient.db();\n  const collections = db.collection(\"meetups\");\n  const selectedMeetup = await collections.findOne({\n    _id: ObjectId(pageId)\n  });\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        id: selectedMeetup._id.toString(),\n        description: selectedMeetup.description,\n        image: selectedMeetup.image\n      }\n    }\n  };\n} // return {\n//   props: {\n//     id: \"m1\",\n//     image:\n//       \"https://www.thinkgeoenergy.com/wp-content/uploads/2017/09/LosAlamosNationalLab.jpg\",\n//     title: \"Los Alamaos\",\n//     address: \"1st NW avenue\",\n//     description: \"This is the first meeetup\",\n//   },\n// };\n// paths: [\n//   {\n//     params: {\n//       meetupId: \"m1\",\n//     },\n//   },\n//   {\n//     params: {\n//       meetupId: \"m2\",\n//     },\n//   },\n// ],","map":{"version":3,"sources":["C:/Users/Sulejman/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["useRouter","MeetupDetail","MongoClient","ObjectId","MeetupDetailing","props","router","console","log","meetupData","image","title","address","description","getStaticPaths","mongoClient","connect","db","collections","collection","meetups","find","_id","toArray","close","fallback","paths","map","value","params","meetupId","toString","getStaticProps","context","pageId","selectedMeetup","findOne","id"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC,C,CACA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACI,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEL,KAAK,CAACI,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEN,KAAK,CAACI,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEP,KAAK,CAACI,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,eAAeT,eAAf;AAEA,OAAO,eAAeU,cAAf,GAAgC;AACrC,QAAMC,WAAW,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACxB,uGADwB,CAA1B;AAIA,QAAMC,EAAE,GAAGF,WAAW,CAACE,EAAZ,EAAX;AACA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAApB,CANqC,CAQrC;;AAEA,QAAMC,OAAO,GAAG,MAAMF,WAAW,CAACG,IAAZ,CAAiB,EAAjB,EAAqB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAArB,EAAiCC,OAAjC,EAAtB;AAEAR,EAAAA,WAAW,CAACS,KAAZ;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,KAAD,KAAY;AAC7BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,KAAK,CAACN,GAAN,CAAUS,QAAV;AAAZ;AADqB,KAAZ,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,MAAM,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAA9B;AAEA,QAAMf,WAAW,GAAG,MAAMb,WAAW,CAACc,OAAZ,CACxB,uGADwB,CAA1B;AAIA,QAAMC,EAAE,GAAGF,WAAW,CAACE,EAAZ,EAAX;AACA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAApB;AAEA,QAAMgB,cAAc,GAAG,MAAMjB,WAAW,CAACkB,OAAZ,CAAoB;AAAEd,IAAAA,GAAG,EAAEnB,QAAQ,CAAC+B,MAAD;AAAf,GAApB,CAA7B;AAEA3B,EAAAA,OAAO,CAACC,GAAR,CAAY2B,cAAZ;AACA,SAAO;AACL9B,IAAAA,KAAK,EAAE;AACLI,MAAAA,UAAU,EAAE;AACVE,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KADZ;AAEVC,QAAAA,OAAO,EAAEuB,cAAc,CAACvB,OAFd;AAGVyB,QAAAA,EAAE,EAAEF,cAAc,CAACb,GAAf,CAAmBS,QAAnB,EAHM;AAIVlB,QAAAA,WAAW,EAAEsB,cAAc,CAACtB,WAJlB;AAKVH,QAAAA,KAAK,EAAEyB,cAAc,CAACzB;AALZ;AADP;AADF,GAAP;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n// our-domain.com/detail-meetup\r\n\r\nfunction MeetupDetailing(props) {\r\n  const router = useRouter();\r\n  console.log(props);\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\nexport default MeetupDetailing;\r\n\r\nexport async function getStaticPaths() {\r\n  const mongoClient = await MongoClient.connect(\r\n    \"mongodb+srv://somePassword:somePassword@cluster0.nhwnb.mongodb.net/meetups?retryReads=true&w=majority\"\r\n  );\r\n\r\n  const db = mongoClient.db();\r\n  const collections = db.collection(\"meetups\");\r\n\r\n  // const allPaths = await collections.find().toArray();\r\n\r\n  const meetups = await collections.find({}, { _id: 1 }).toArray();\r\n\r\n  mongoClient.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((value) => ({\r\n      params: { meetupId: value._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const pageId = context.params.meetupId;\r\n\r\n  const mongoClient = await MongoClient.connect(\r\n    \"mongodb+srv://somePassword:somePassword@cluster0.nhwnb.mongodb.net/meetups?retryReads=true&w=majority\"\r\n  );\r\n\r\n  const db = mongoClient.db();\r\n  const collections = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await collections.findOne({ _id: ObjectId(pageId) });\r\n\r\n  console.log(selectedMeetup);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        id: selectedMeetup._id.toString(),\r\n        description: selectedMeetup.description,\r\n        image: selectedMeetup.image,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\n// return {\r\n//   props: {\r\n//     id: \"m1\",\r\n//     image:\r\n//       \"https://www.thinkgeoenergy.com/wp-content/uploads/2017/09/LosAlamosNationalLab.jpg\",\r\n//     title: \"Los Alamaos\",\r\n//     address: \"1st NW avenue\",\r\n//     description: \"This is the first meeetup\",\r\n//   },\r\n// };\r\n\r\n// paths: [\r\n//   {\r\n//     params: {\r\n//       meetupId: \"m1\",\r\n//     },\r\n//   },\r\n//   {\r\n//     params: {\r\n//       meetupId: \"m2\",\r\n//     },\r\n//   },\r\n// ],\r\n"]},"metadata":{},"sourceType":"module"}