{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sulejman\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\";\n// our-domain.com\nimport MeetupList from \"../components/meetups/MeetupList.js\";\nimport { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MainPage(kleps) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Main Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: kleps.dummyMeetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MainPage;\nexport async function getStaticProps() {\n  const mongoClient = await MongoClient.connect(\"mongodb+srv://somePassword:somePassword@cluster0.nhwnb.mongodb.net/meetups?retryReads=true&w=majority\");\n  const db = mongoClient.db();\n  const collections = db.collection(\"meetups\"); // const allData = await collections.json();\n\n  const allMeetups = await collections.find().toArray();\n  mongoClient.close();\n  return {\n    props: {\n      dummyMeetups: allMeetups.map(value => ({\n        title: value.title,\n        address: value.address,\n        image: value.image,\n        id: value._id.toString()\n      }))\n    }\n  };\n} // export async function getServerSideProps() {\n//   return {\n//     props: {\n//       dummyMeetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }","map":{"version":3,"sources":["C:/Users/Sulejman/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","Fragment","MongoClient","MainPage","kleps","dummyMeetups","getStaticProps","mongoClient","connect","db","collections","collection","allMeetups","find","toArray","close","props","map","value","title","address","image","id","_id","toString"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,qCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,eAAeF,QAAf;AAEA,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,WAAW,GAAG,MAAML,WAAW,CAACM,OAAZ,CACxB,uGADwB,CAA1B;AAGA,QAAMC,EAAE,GAAGF,WAAW,CAACE,EAAZ,EAAX;AACA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAApB,CALqC,CAMrC;;AACA,QAAMC,UAAU,GAAG,MAAMF,WAAW,CAACG,IAAZ,GAAmBC,OAAnB,EAAzB;AAEAP,EAAAA,WAAW,CAACQ,KAAZ;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLX,MAAAA,YAAY,EAAEO,UAAU,CAACK,GAAX,CAAgBC,KAAD,KAAY;AACvCC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAD0B;AAEvCC,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAFwB;AAGvCC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAH0B;AAIvCC,QAAAA,EAAE,EAAEJ,KAAK,CAACK,GAAN,CAAUC,QAAV;AAJmC,OAAZ,CAAf;AADT;AADF,GAAP;AAUD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// our-domain.com\r\nimport MeetupList from \"../components/meetups/MeetupList.js\";\r\nimport { Fragment } from \"react\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MainPage(kleps) {\r\n  return (\r\n    <Fragment>\r\n      <h1>The Main Page</h1>\r\n      <MeetupList meetups={kleps.dummyMeetups} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n\r\nexport async function getStaticProps() {\r\n  const mongoClient = await MongoClient.connect(\r\n    \"mongodb+srv://somePassword:somePassword@cluster0.nhwnb.mongodb.net/meetups?retryReads=true&w=majority\"\r\n  );\r\n  const db = mongoClient.db();\r\n  const collections = db.collection(\"meetups\");\r\n  // const allData = await collections.json();\r\n  const allMeetups = await collections.find().toArray();\r\n\r\n  mongoClient.close();\r\n\r\n  return {\r\n    props: {\r\n      dummyMeetups: allMeetups.map((value) => ({\r\n        title: value.title,\r\n        address: value.address,\r\n        image: value.image,\r\n        id: value._id.toString(),\r\n      })),\r\n    },\r\n  };\r\n}\r\n\r\n// export async function getServerSideProps() {\r\n//   return {\r\n//     props: {\r\n//       dummyMeetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}